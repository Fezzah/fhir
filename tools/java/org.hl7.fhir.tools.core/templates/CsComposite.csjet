<%@ jet 
	package="org.hl7.fhir.tools.publisher.implementations.templated"
	class="CsCompositeTypeGenerator" 
	imports ="org.hl7.fhir.definitions.Config 
			  org.hl7.fhir.definitions.ecore.fhir.*
			  org.eclipse.emf.common.util.EList
			  org.hl7.fhir.utilities.Utilities
			  java.util.*
			  org.hl7.fhir.tools.publisher.implementations.GeneratorUtils
			  org.hl7.fhir.tools.publisher.implementations.CompositeTypeGeneratorInput"
%>
<% 
	CompositeTypeGeneratorInput getInput = (CompositeTypeGeneratorInput)argument; 
	CompositeTypeDefn composite = getInput.getSubject();
	Definitions definitions = getInput.getDefinition();
	Map<ElementDefn, GeneratorUtils.NamedElementGroup> nestedComponents = getInput.getNestedComponents();
%>
using System;
using System.Collections.Generic;
using HL7.Fhir.Instance.Support;
using System.Xml.Linq;

/*
<%=Config.FULL_LICENSE_CODE%>
*/

//Generated on <%=Config.DATE_FORMAT().format(definitions.getDate())%> for FHIR v<%=definitions.getVersion()%>

namespace HL7.Fhir.Instance.Model
{
	/*
	 * <%=composite.getAnnotations().getDefinition()%>
	 */
	<% if(composite.getAllowedGenericTypes().size() > 0) { 
		%>public partial class <%= composite.getName() %> { }<%}%>
		
	public partial class <%=GeneratorUtils.generateCSharpTypeName(composite.getName())%><%
			if(composite.getAllowedGenericTypes().size() > 0) {%><T> : <%= composite.getName()%><%}
			%><% else if( composite.isResource() ) { %> : Resource<% }
			%><% else if( composite.isComposite() ) { %> : Composite<% }%>
	{
		<% for( CompositeTypeDefn nested : composite.getLocalCompositeTypes() )
		{%>
			public class <%= GeneratorUtils.generateCSharpTypeName(nested.getName())%>
			{
				<% List<ElementDefn> elementsParam = nested.getElements(); 
					CompositeTypeDefn contextParam = composite;
				%><%@ include file="CsClassMember.csjetinc" %>
			}
		<%}%>
		<% for( GeneratorUtils.NamedElementGroup group : nestedComponents.values() )
		{%>
			public class <%= GeneratorUtils.generateCSharpTypeName(group.getName())%>
			{
				<% List<ElementDefn> elementsParam = group.getElements(); 
				CompositeTypeDefn contextParam = composite;
				%><%@ include file="CsClassMember.csjetinc" %>
			}
		<%}%>
		<% EList<BindingDefn> bindingsParam = composite.getBindings(); %><%@ include file="CsEnum.csjetinc" %>
		<% List<ElementDefn> elementsParam = composite.getElements(); 
		CompositeTypeDefn contextParam = composite;
		%><%@ include file="CsClassMember.csjetinc" %>
	}
}