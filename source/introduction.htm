<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <title>Introduction</title>
    <link rel="Stylesheet" href="fhir.css" type="text/css" media="screen" />
</head>
<body>
<%header%>
<%sidebar%>


<%maindiv%>
<h1>Introduction</h1>
<!--
Lloyd:
To put it another way, if you're binding to specific vocabularies, you're no longer in the "conceptual' space, you're starting to get into the logical/implementable space.  If your intention is to create a logical/implementable UML model, that's ok, but it's not appropriate to call the model a DAM.  On the other hand, if you're planning to produce a v3 specification, your logical/implementable model is required to be a RIM-based model and thus vocabulary binding should only happen there.

-->

<table border="0" cellspacing="0" cellpadding="5">
<tr>
<td><img src="flame128.png"/></td>
<td>
Fast Healthcare Interoperability Resources (FHIR) defines a set of "resources" for health.
These resources represent granular clinical concepts that can be exchanged in order to 
quickly and effectively solve problems in healthcare and related process. 
The resources cover the basic elements of healthcare - patients, admissions, diagnostic
reports, medications, and problem lists, with their typical participants, and also support
a range of richer and more complex clinical models. 
The simple direct definitions of the resources are based on 
thorough requirements gathering, formal analysis and extensive 
cross-mapping to other relevant standards. 
</td></tr></table>
<p>
Technically, FHIR is designed for the web; where possible or appropriate, 
open internet standards are used for data representation. The resources 
are based on simple XML, with an <a href="http.htm">http-based RESTful</a>
protocol where each resource has predictable URL. Note that while the 
resources are defined to support an HTTP based RESTful infrastructure, it is 
not necessary to use such an infrastructure when using the resources. This specification 
also defines <a href="messaging.htm">a class messaging based framework</a> and 
<a href="documents.htm">way to use the resources to build clinical documents</a>. In 
addition, <a href="implementation.html#SOA">the resources can be used in a SOA-based solution</a>.
This flexibility offers coherent solutions for a range of interoperability problems. 
</p>
<h2>Roadmap</h2>
<p>
This specification has the following parts: 
</p>
<ul>
<li>Background: foundation infrastructure for implementing resources (<a href="xml.htm">XML rules</a>, <a href="datatypes.htm">data types</a>, <a href="terminology.htm">terminology basics</a>,
   <a href="extensibility.htm">extensibility rules</a>, and a <a href="constraint.htm">conformance infrastructure</a>). </li>
<li>Exchange: actual schemes for exchanging resources  (<a href=http.htm">HTTP RESTful protocol</a>, <a href="mssaging.htm">Messaging</a> and <a href="documents.htm">Documents</a>, along with a <a href="implementation.htm">general implementation resources page</a>)</li>
<li>Administrative Resources: basic resources encountered throughout the healthcare process </li>
<li>Basic Clinical Components: Core reusable clinical resources that are encountered in most clincal practice</li>
<li>etc</li>
</ul>
<p>The contents of this specification are navigated using the right-hand side bar.
</p>
<h2>Resources</h2>
<p>
All resources have the following parts:
</p>
<ul>
 <li>A master id that is never changed</li>
 <li>Structured Data - the formal representation of the resource in a computable fashion</li>
 <li>Extensibility section - additional data not defined by HL7</li>
 <li>Text Representation - a human readable fall back presentation</li>
</ul>
<p>
Because the master resource id is never changed or reused, resources may refer to other 
resources by the master id knowing that this is stable reference. While each resource 
can be read and/or changed without explicit reference to these other 
resources, the presence of these references influences the behaviour 
of the system: implementations are required to maintain system and data
integrity at all times.
</p>
<p>
The exchange specifications are simple and straight forward
and based around a direct description of the XML representation of the 
resource. Each resource is described separately, though there are 
some common data patterns used across all the resources (called "<a href="datatypes.htm">data types</a>").
</p>
<p>
For each resource, this specification defines 
</p>
<ul>
<li> scope and meaning of the resource </li>
<li> semantics and business implications of the resource</li>
<li> the XML content model of the resource (as XML, UML, and schema)</li>
</ul>
<p>
In addition to the simple XML definitions, a W3C XML schema and 
UML class diagram are available for each resource. The UML
class diagram represents the same logical model as the XML format (though 
because of UML issues, implementors should not expect software built from the 
UML models to be automatically interoperable or conformant with the XML defined
in this specification).
</p>
<p>
Each xml element (or matching UML class, attribute and 
composition association) has a formal definition that includes 
a definition, statement of requirements, additional comments, 
a mapping to the v3 RIM, and an indicative v2 mapping.
</p>
<p>
In addition, for each resource, some RESTful specific features are described:
</p>
<ul>
<li> the relative URL for RESTful implementations derived from the id, the type, and
a local base URL</li>
<li> transactions specfically associated with the resource</li>
<li> additional search parameters specifically associated with the resource</li>
</ul>
<p>
Each resource supports the same list of transactions - read, update, delete,
etc. One particularly important transaction supported by every resource type is
the provision of a conformance statement which specifies what parts of the defined
content model are supported by the system, and what other transactions or interactions
are supported. If any of the other interactions are supported, 
the conformance interaction must be supported. (i.e. if the 
conformance interaction returns an error, no operations are 
supported).
</p>


<%footer%>
<%/maindiv%> 
    
    
</body>
</html>