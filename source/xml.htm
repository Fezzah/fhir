<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <title>Resource Format - FHIR v<%version%></title>
    <link rel="Stylesheet" href="fhir.css" type="text/css"/>
    <link rel="Stylesheet" href="fhir-print.css" type="text/css" media="print" />
</head>

<body>
<%sidebar%>


<%maindiv%>

<%xmlheader%>

<h1>Resource Format</h1>

<p>
In this specification, resources are described in a simple
XML format. This page documents how the XML content for resources is described
and controlled. The XML may be validated by schema and schemas are provided, but 
validation is not required in operational systems (though the XML must always be 
valid against this specification). In addition to the simple XML description, W3C 
Schema, UML models, and other definitional models are provided that may be a 
useful aid for system implementation.
</p>

<h2>XML Content Models</h2>
<p>
To provide a visual sense of what the end resource instances will look like, all
resources include documentation of their allowed content in a pseudo-XML syntax
that uses the following notation:
</p>
<pre class="spec">
 &lt;<b>name</b> xmlns="http://hl7.org/fhir" [xml:lang]&gt; 
   &lt;<u><b title="Formal Definition (must tbe supported or understood)">nameA</b></u>&gt;<font color="Gray">&lt;!-- </font><font color="brown">1..1</font> <font color="Darkgreen">type</font> <font color="Navy">description of content</font> <font color="Gray"> --&gt;</font>&lt;nameA&gt;
   &lt;<b title="Formal Definition">nameB</b> <font color="red">d?</font>&gt;<font color="Gray">&lt;!-- </font><font color="deeppink" title="Condition">0..1</font> <font color="darkgreen">type</font> <font color="Navy">description</font> <font color="Gray"> --&gt;</font>&lt;/nameB&gt;
   &lt;<b>nameC</b>&gt; <font color="Brown"><font color="Gray">&lt;!-- </font> <b>1..*</b> --&gt;</font>
     &lt;<b>nameD</b>  <font color="red">d?</font>&gt;<font color="Gray">&lt;!-- </font><font color="brown">1..1</font> <font color="darkgreen">type</font>&gt;<font color="navy">Relevant records</font> <font color="Gray"> --&gt;</font>&lt;/nameD&gt;
   &lt;/nameC&gt;
 &lt;name&gt;
</pre>
<p>
Notes:
</p>
<ul>
 <li>The XML character set is always unicode. Specifying the character encoding is optional but recommended. Any encoding that is round trip compatible with unicode is allowed.</li>.
 <li>FHIR elements are always in the namespace <a href="http://hl7.org/fhir">http://hl7.org/fhir</a>.  This is usually specified as the default namespace on the root element. The only other namespaces that occur in FHIR resources are where some external content model is introduced into the resource content model. XHTML is found in every resource - see below.</li>
 <li>To build a valid resource, simply replace the contents of the elements with valid content as described by the cardinality, type rules and content description found in the comment in each element.</li>
 <li>Elements are assigned a cardinality that specifies how many times the element may or must appear. If the cardinality is shown in 
    <font color="deeppink">Pink</font> then there is an additional condition that impacts on the allowed cardinality. This is available as a mouse-over text, or in the formal definitions.</li>
 <li>Some elements are marked with a <font color="red">d?</font>, which indicates that they are able to carry the "<i>dataAbsentReason</i>" attribute. <a href="#dataAbsentReason">See below for further discussion</a>.</li>
 <li>The elements are assigned one or more types. All of the types are defined in <a href="datatypes.htm">the data types</a> except for "Resource" and "Narrative" that are documented below. The type names are hyperlinked.</li>
 <li>In the Resource definitions, each element name is also a hyperlink to the formal definition of the element in the data dictionary that underlies the exchange formats. 
   If the element name is underlined, then applications are required to support and/or understand it.</li>
 <li>Any of the XML elements may have an id attribute to serve as <a href="#idref">the target of an internal reference</a>. The id attribute is not shown.</li>
 <li>The root element of a resource may have an xml:lang the specifies the primary language of the resource.</li>
 <li>In addition to this description, other definitional forms are available, including W3C schema, Schematron, (Todo: Relax NG schema, RDF and eCore).</li>
</ul>
<a name="metadata"></a>
<h2>Resource Data and Metadata items</h2>
<p>
Every resource contains the following common elements:
</p>
<pre class="spec">
&lt;<a href="#ResourceDefn" title="A Resource Definition for FHIR" class="dict"><b>[Name]</b></a> xmlns="http://hl7.org/fhir"&gt;
 &lt;<a href="#Resource" title="Master Resource Id, always first in all resources" class="dict"><b>id</b></a>&gt;<font color="Gray">&lt;!--</font> <font color="brown"><b>0..1</b></font> <font color="darkgreen"><a href="datatypes.htm#id">id</a></font> <font color="navy">Master Resource Id, always first in all resources</font><font color="Gray"> --&gt;</font>&lt;/id&gt;
 &lt;<a href="extensibility.htm" title="See Extensions" class="dict"><b>extension</b></a>&gt;<font color="Gray">&lt;!-- <font color="brown"><b>0..*</b></font> </font> <font color="darkgreen"><a href="extensibility.htm">Extension</a></font>   <a href="extensibility.htm"><font color="navy">See Extensions</font></a> <font color="Gray"> --&gt;</font>&lt;/extension&gt;
 &lt;<a href="#Narrative" title="Text summary of resource, for human interpretation" class="dict"><b>text</b></a>&gt;<font color="Gray">&lt;!--</font> <font color="brown"><b>1..1</b></font> <font color="darkgreen"><a href="Narrative.htm#Narrative">Narrative</a></font> <font color="navy">Text summary of [x], for human interpretation</font><font color="Gray"> --&gt;</font>&lt;/text&gt;
&lt;/[Name]&gt;
</pre>
<p>
The <i>id</i> element is always mandatory except in the case that a resource is posted to a server to create it, 
and the id of the resource is not yet known. In this case, the id element is absent. The use of the id 
element is <a href="#Resource">discussed further below</a>. The use of the <i>extensions</i> element is 
<a href="extensibility.htm">discussed under "Extensibility"</a>. The text ("Narrative") is <a href="#Narrative">discussed below</a>. 
In addition to these data elements, there are several pieces of metadata about a resource that are not part of the resource
content, but are delegated to the infrastructure:
</p>
<table class="grid">
  <tr><th>Metadata Item</th><th>Type</th><th>Usage</th></tr>
  <tr><td>Version Id</td><td><a href="datatypes.htm#id">id</a></td><td>Changed each time the content of the resource changes. Can be referenced in a resource reference (see below). Can be used to ensure that updates are based on the latest version of the resource.</td></tr>
  <tr><td>Last Modified Date</td><td><a href="datatypes.htm#dateTime">dateTime</a></td><td>Changed each time the content of the resource changes. Can be used by a system or a human to judge the currency of the resource content.</td></tr>
  <tr><td>Master Location</td><td><a href="datatypes.htm#uri">uri</a></td><td>Reports the location of the master for the resource. Useful when a resource is re-used by another system - it can report the location of the master should any system need to know this.</td></tr>
</table>
<p>
In any environment where the resources are used, the technical details of how these metadata elements are represents will need to be resolved. For further details, see <a href="implementation.htm">Implementation Details</a>.
</p>


<a name="dataAbsentReason"></a>
<h2>dataAbsentReason</h2>
<p>
Data Quality - or the lack thereof - is a ubiquitious issue in healthcare. In order to handle this, 
many elements defined as part of a resource may have a dataAbsentReason attribute.  This attribute may be used 
to specify why the normally expected content of the data element is missing. 
</p>
<p>
<pre class="xml">
 &lt;<b>x</b> dataAbsentReason=""/&gt;
</pre> 
</p>
<p>
 The <i>dataAbsentReason</i> attribute can have one of the following values:
</p>
<table class="codes">
 <tr><td>unknown             </td><td>The value is not known</td></tr>
 <tr><td>&nbsp;&nbsp;asked   </td><td>The source human does not know the value</td></tr>
 <tr><td>&nbsp;&nbsp;temp    </td><td>There is reason to expect (from the workflow) that the value may become known</td></tr>
 <tr><td>&nbsp;&nbsp;notasked</td><td>The workflow didn't lead to this value being known</td></tr>
 <tr><td>masked              </td><td>The information is not available due to security, privacy or related reasons</td></tr>
 <tr><td>unsupported         </td><td>The source system wasn't capable of supporting this element</td></tr>
 <tr><td>astext              </td><td>The content of the data is represented as text (see below)</td></tr>
 <tr><td>error               </td><td>Some system or workflow process error means that the information is not available</td></tr>
</table>
<p> 
Notes: 
</p>
<ul>
<li>Using "masked" may be abreach of security or confidentiality.  However, there are times when it's use
   is required to support alternate workflows for gaining access to denied information.</li>
<li>If the <i>dataMissingReason</i> attribute is present, the element may still have additional content from its normally defined content. Usually this is where the contained elements define what data is missing 
  (for instance, that a <a href="datatypes.htm#Contact">home phone number</a> is unknown).</li>
<li>Systems are not required to process any provided data when a <i>dataAbsentReason</i> is present, but may choose to do so.</li>   
<li>The <i>dataAbsentReason</i> attribute is never used inside the data types, nor can it be used in the <i>text</i> portion 
  of a resource, nor inside an <i>extension</i> block (with the exception of the <i>value</i> of the extension)</li>
</ul>

<hr/>

<img src="base.png"/>
<a name="Narrative"></a>
<h2>Narrative</h2>
<p>
Every resource SHALL include a human readable narrative that contains a summary of the resource, 
and may be used to represent the content of the resource to a human. The narrative need 
not encode all the structured data, but is required to contain sufficient detail to make 
it "clinically safe" for a human to just read the narrative. Resources may define 
what content should be represented in the narrative to ensure clinical safety.
</p>
<p>
The narrative for a resource is allowed to contain additional information that is not in 
the structured data, including human-edited content. Such additional information must be 
in the scope of the definition of the resource. In small, closed trading partner environments,
there may be no need for a narrative text. In such cases, implementations are allowed to 
populate the narrative with text equivalent to "No human readable text provided for this resource" (other languages are allowed). 
Implementers should note that small, closed traing partner environments are very likely 
to open up during the lifetime of the resources they define.
</p>
<p>
Each narrative has a flag that specifies the relationship between the narrative and the 
structured data.  This flag may have one of the following codes:
</p>
<table class="codes">
 <tr><td><font>generated</font></td><td>The contents of the narrative are entirely generated from the structured data in the resource.</td></tr>
 <tr><td><font>extensions</font></td><td>The contents of the narrative are entirely generated from the structured data in the resource and some of the narrative is generated from extensions</td></tr>
 <tr><td><font>additional</font></td><td>The contents of the narrative contain additional information not found in the structured data</td></tr>
</table> 
<p>
In addition to this general flag that specifies the status of the narrative, there is an optional mapping between the 
narrative and the structured data. Each mapping has narrative id and structured data id which <a href="#idref">provide internal references</a> 
to the narrative and the structured data respectively, and a flag for whether the text was generated from the 
data, or the data was generated from the text (by some form of retrospective processing, whether human or computer), 
or whether both come from an external source. The structured data target may be an empty element with a dataAbsentReason
of "astext"; this means that the value of the text could not be properly represented in the data type. Any element defined as part of the resource content,
or any repeating element inside a data type may carry an id attribute to serve as the target of a narrative mapping. 
</p>
<p>
The narrative is an xhtml fragment that also includes images if appropriate:
</p>
<%dt Narrative%>

<p>
The contents of the <i>div</i> element are an XHTML fragment containing only the basic html formatting elements described in 
chapters 7-11 (except section 4 of chapter 9) and 15 of the HTML 4.0 standard, &lt;a&gt; elements (either name or href),
images and internally contained style attributes. The XHTML content must not contain
a head, a body element, external stylesheet references, scripts, forms, base/link/xlink, frames, iframes,
and objects. 
<!-- Todo: Formally encode these constraints in schematron -->
</p>
<div class="example">
<pre class="xml">
  &lt;narrative&gt;
    &lt;div xmlns="http://www.w3.org/1999/xhtml"&gt;This is a simple 
          example with only plain text&lt;/div&gt;
  &lt;/narrative&gt;
   
  &lt;narrative&gt;
   &lt;div xmlns="http://www.w3.org/1999/xhtml"&gt;
     &lt;p&gt;
       This is an &lt;i&gt;example&lt;/i&gt; with some &lt;b&gt;xhtml&lt;/b&gt; formatting.
     &lt;/p&gt;
   &lt;/div&gt;
  &lt;narrative&gt;
</pre>
</div>
<p>
The image source may be a local reference within the resource:
</p>
<pre class="xml">
  &lt;img src="#a5"/&gt;
</pre>
<p>
This is a <a href="#idref">internal reference</a> to an id attribute on an element in the same resource, either in the image attachments on the text element 
directly, or an element of type "<a href="datatypes.htm#Attachment">Attachment</a>".
</p>
<div class="example">
<pre class="xml">
  &lt;narrative&gt;
    &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
      &lt;p&gt;
        &lt;img src=&quot;#a1/&gt;.
      &lt;/p&gt;
    &lt;/html&gt;
    &lt;image id=&quot;a1&quot;&gt;
      &lt;mimeType&gt;image/png&lt;/mimeType&gt;
      &lt;data&gt;MEKH....SD/Z&lt;/data&gt;
    &lt;/image&gt;
  &lt;narrative&gt;
</pre>
</div>

<p>
Since the presence of images that are not part of the resource is not guaranteed, 
images that are an essential part of the narrative should always be embedded.
</p>
<p>
The <i>dataAbsentReason</i> is not used on the narrative element or any elements 
contained in it. The xhtml element must have some non-whitespace content.
</p>
<p>
Note: the XHTML is contained in general XML, and there is no support for HTML entities
like <i>&amp;nbsp;</i> or <i>&amp;copy;</i> etc. Unicode characters should be used instead. Note that 
<i>&amp;#160;</i> substitutes for <i>&amp;nbsp;</i>.
</p>

<a name="css"></a>
<h3>Styling the XHTML</h3>
<p>
The XHTML fragment in the narrative may be styled using CSS in the normal fashion, using a mix of classes, ids 
and in-line style elements. Specific CSS stylesheets will be applied to the XHTML when it is extracted from
the resource to be displayed to a human to create the presentation desired in the context of use. Authors
may fix the following styling aspects of the content:
</p>
<ul>
  <li>bold, italic, underline, strikethrough</li>
  <li>font color, family, and size</li>
  <li>background colour, text alignment</li>
  <li>whitespace interpretation</li>
  <li>ordered list number format (since it may be referred to in text)</li>
</ul>
<p>
These style properties are specified in-line using the style attribute. If an equivalent 
html element exists, such as "i", or "pre", it may be used instead, but note that some of these 
elements are deprecated in HTML 4 and must not be used in Narrative XHTML (including "u", and "font").
</p>
<p>
Rendering systems are required to respect any of these rendering styles when they are specified in 
the XHTML, though appropriate interpretation is allowed (e.g. a low-contrast display for dark 
room contexts may adjust colors accordingly). 
</p>
<p>
Authors are allowed to specify additional styles and style properties as specified in the CSS specification,
but these are extensions to this specification and renderers are not required to honor them. Note, however,
the additional rules around styling that apply in the context of <a href="documentheader.htm#refs">documents</a>.
</p>
<a name="idref"></a>
<h2>Internal References</h2>
<p>
There are 4 cases where elements inside a resource reference each other:
</p>
<ul>
 <li>In the XHTML/data mapping above</li>
 <li>From <a href="extensibility.htm#Extension">an extension element</a> to its target element</li>
 <li>Inside a <a href="datatypes.htm#CodeableConcept">CodeableConcept data type to identify the primary encoding</a></li>
 <li>On an img src reference in the narrative</li>
</ul>
<p>
These references are done using an id/idref based approach, where a source element indicates that it 
has the same content as the target element. The target element has an attribute "id" which must 
have a unique value within the resource with regard to any other id attributes. The "id" attribute is not in any namespace.
The source element has no content (text or children elements) and just a single attribute named "idref". The value of 
the idref attribute must match the value of an id attribute in the same resource (or, for a CodeableConcept, inside the
same datatype). 
</p>
<div class="example">
<pre class="xml">
  &lt;example&gt;
    &lt;target id="a1"&gt;
      &lt;child&gt;content&lt;/child&gt;
    &lt;/target&gt;
    &lt;-- other stuff --&gt;
    &lt;source idref="a1"&gt;
  &lt;/example&gt;
</pre>
</div>

<p>
In a single resource, this works exactly like xml:id/idref, but there is an important difference: the 
uniqueness and resolution scope of these id references is within the resource that contains them. If multiple
resources are combined into a single piece of XML, such as an atom feed, duplicate values may occur between resources. This must be 
managed by applications reading the resources.
</p>

<a name="Resource"></a>
<h2>Resource References</h2>
<p>
The "Resource" type indicates a reference from one resource to another.
</p>
<%dt ResourceReference%>
<p>
Whether or not the type of the resource reference is fixed for a particular element, the reference includes the resource type.
</p>
<p>
Both the id and the version are URL based references - they must be literal URLs that resolve to the location of the resource.
Both URLs may be relative URLS, in which case they are interpreted to contain the logical id and versionId respectively of the resource in question,
and the resolution of the logical reference is a matter of implementation logic. Using absolute URLs provides a stable scalable
approach suitable for a cloud/web context, while using relative/logical references provides a flexible approach suitable for use
when trading between separated eco-systems. Absolute URLs do not need to point to a <a href="http.htm">FHIR RESTful 
server</a>, though this is the preferred approach.
</p>
<p>
A resource reference may contain either a version independent reference (<i>"id"</i>) or a version dependent reference (<i>"version"</i>)
or both. If both are provided, it is at the descretion of the processor of the data which to use in a particular context. 
If relative references are used, a <i>version</i> cannot be provided without an <i>id</i>, since the <i>version</i> may be scoped by the <i>id</i>.
</p>

<div class="example">
<p>A relative reference to the <a href="patient.htm">patient</a> "034AB16" in an element named "context":</p>
<pre class="xml">
  &lt;context&gt;
    &lt;type&gt;Patient&lt;/type&gt;
    &lt;id&gt;034AB16&lt;/id&gt;
  &lt;context&gt;
</pre>
<p>An absolute reference to a <a href="profile.htm">resource profile</a> in an element named "profile":</p>
<pre class="xml">
  &lt;profile&gt;
    &lt;type&gt;Profile&lt;/type&gt;
    &lt;id&gt;http://fhir.hl7.org/svc/profile/@c8973a22-2b5b-4e76-9c66-00639c99e61b&lt;/id&gt;
  &lt;profile&gt;
</pre>
<p><i>Note that HL7 has not yet actually created a profile registry, nor decided on a URL for it</i>.</p>
</div>
<p>
The logical <a href="datatypes.htm#id">id</a> and version id of a Resource can take one of the following forms:
</p>
<table class="list">
  <tr><td>A whole number in the range 0 to 2^64-1. May be represented in hex</td></tr>
  <tr><td>A uuid (guid) (in lowercase, without wrapping with the characters "{}[]" which sometimes occur)</td></tr>
  <tr><td>An <a href="http://en.wikipedia.org/wiki/Object_identifier">ISO OID</a></td></tr>
  <tr><td>Any other combination of letters, numerals, "-" and "."</td></tr>
  <tr><td></td><td></td></tr>
</table>
<p>
Resource ids must be represented in lowercase. Ids are always opaque, and systems should not and need not attempt to determine 
their internal structure. However the id is represented, it must always be represented in the same way in resource references and URLs.
Note that absolute URLs that do not point to FHIR RESTful servers do not need to include the id in the URL, though this is good practice. 
If the id is in the URL, it must be present in lower case. Irrespective of whether the URL points to a FHIR RESTful server or includes
the logical id in the URL, URLs are always considered to be case-sensitive and lowercase is preferred.
</p>
<p>
Plain text narrative may be provided that describes the resource in addition to the resource reference (or in place of, if a 
dataAbsentReason is allowed).
</p>
<div class="example">
<pre class="xml">
  &lt;id&gt;
    &lt;type&gt;Organisation&lt;/type&gt;
    &lt;id&gt;1234&lt;/id&gt;
    &lt;text&gt;HL7, Inc&lt;/text&gt;
  &lt;id&gt;
</pre>
</div>
<div class="use">
<p><b>Use</b></p>
<p>
Unless the resource reference element has a dataAbsentReason flag, it must contain 
a valid <i>type</i> and (<i>id</i> or <i>version</i>). 
</p>
</div>

<h2>Inter-version Compatibility</h2>
<p>
There is no explicit version marker in the XML. Subsequent versions
of this specification may introduce new elements at any point in the 
content models, but the path and meaning of existing data elements will not be 
changed. Given that, in a typical scenario, mixed versions may need to exist, 
applications SHOULD ignore elements that they do not recognize unless those
elements are marked with a "must understand" attribute. However, in 
a healthcare context, many application vendors are unwilling to 
consider this approach because of concerns about clinical risk. 
Applications are not required to ignore unknown elements, but must
declare whether they will do so in their conformance statements using the
<i>acceptUnknown</i> element.
</p>

<h2>XML Schema and Schematron</h2>
<p>
This specification provides schema definitions for all of the content models described here. 
The base schema is called "<a href="fhir-base.xsd">fhir-base.xsd</a>" and defines all of the 
datatypes and also the base infrastructure types described on this page. In addition, there 
is a schema for each resource and a common schema <a href="fhir-all.xsd">fhir-all.xsd</a>
that includes all the resource schemas.  A customized atom schema <a href="fhir-atom.xsd">fhir-atom.xsd</a>
is provided for validating <a href="atom.htm">bundles</a>.
</p>
<p>
In addition to the w3c schema files, this specification also provides Schematron files that
enforce the various constraints defined for the datatypes and resources.  These are packaged
as files for each resource as well as a combined fhir-atom.sch file
that incorporates the rules for all resources.
</p>
<p>
XML that is exchanged must be valid against the w3c schema and Schematron, though there is no requirement to
validate instances against either, nor is being valid against the schema and Schematron sufficient 
to be a conformant instance. (This specification makes several rules that cannot be checked 
by either mechanism.) Exchanged content must not specify the schema or even the schema instance 
namespace in the resource itself. 
</p>

<!-- Todo: Relax NG, RDF, eCore -->

<a name="objects"></a>
<h2>Object Models</h2>
<p>
In addition to the schema, this specification also provides object
models defined in UML that may be of assistance in defining systems 
that work with the resources defined here.
</p>
<p>
Although the UML models provided express the same contents as the 
resource formats, because of the wide variation in how different architectures and 
tools map from UML to XML, there should be no expectation that any particular
tool will produce compatible XML from these UML diagrams. Systems are welcome
to use these object models as a basis for serialization internally or even
between trading partner systems, with any form of exchange technology (including 
JSON). Systems that use this form of exchange cannot claim to be conformant 
with this specification, but can describe themselves as using "FHIR consistent
object models".
</p>

<a name="json"></a>
<h2>JSON Format</h2>
<p><i>Informative Section: Due to a series of issues around the formalization of the JSON representation, the JSON representation is only informative.</i></p>
<p>
Though the formal representation of the resources is in XML, many systems wish to use JSON to exchange the resources and it is useful to standardise a single JSON format for this use. 
The JSON format for the resources follows the standard XML format closely:
</p>
<pre class="spec">
 &lt;<b>name</b> xmlns="http://hl7.org/fhir"&gt; 
   &lt;<u><b title="Formal Definition (must tbe supported or understood)">nameA</b></u>&gt;<font color="Gray">&lt;!-- </font><font color="brown">1..1</font> <font color="Darkgreen">type</font> <font color="Navy">description of content</font> <font color="Gray"> --&gt;</font>&lt;nameA&gt;
   &lt;<b title="Formal Definition">nameB</b> <font color="red">d?</font>&gt;<font color="Gray">&lt;!-- </font><font color="deeppink" title="Condition">0..1</font> <font color="darkgreen">type</font> <font color="Navy">description</font> <font color="Gray"> --&gt;</font>&lt;/nameB&gt;
   &lt;<b>nameC</b>&gt; <font color="Brown"><font color="Gray">&lt;!-- </font> <b>1..*</b> --&gt;</font>
     &lt;<b>nameD</b>  <font color="red">d?</font>&gt;<font color="Gray">&lt;!-- </font><font color="brown">1..1</font> <font color="darkgreen">type</font>&gt;<font color="navy">Relevant records</font> <font color="Gray"> --&gt;</font>&lt;/nameD&gt;
   &lt;/nameC&gt;
 &lt;name&gt;
</pre>
<p>
is represented in JSON as 
</p>
<pre class="json">
{"name":
  "nameA" : {...},
  "nameB" : 
    [
      {...},
      {...}
    ],
  "nameC" :  
    [
      { "nameD" : {...} }
    }
}
</pre>
<p>Notes:</p>
<ul>
 <li>There are no namespaces in the JSON representation</li>
 <li>The names are the same, including for elements that may repeat. This means that queries written against the XML form could also be executed against the JSON form (though there seems to be no general XPath for JSON implementation)</li>
 <li>The xml attributes <i>id</i>, <i>idref</i> and <i>dataAbsentReason</i> become JSON object attributes with the same names; they come in that order before other defined elements</li>
 <li>In the data types, the value representations for <a href="datatypes.htm#primitive">primitive types</a> such as string, decimal, etc. are identical between the XML and the JSON form (including instant, which is represented as plain text, not in one of the proposed JSON custom date formats)</li>
 <li>JSON property attributes never have empty values; omit a value if it is empty (same as for the xml)</li>
 <li>Items that may repeat are represented as arrays even if they do not repeat in the actual instance</li>
 <li>The XHTML &lt;div&gt; element is represented as a single escaped string of XHTML</li>
 <li>The last two items means that generic XML -> JSON converters will not be able to perform a correct conversion. The reference platforms provide XML &lt;--&gt; JSON conversion functionalty</li>
</ul>

<%footer%>

<%/maindiv%>    
</body>
</html>