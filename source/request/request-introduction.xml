<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/xhtml1-strict.xsd" xmlns="http://www.w3.org/1999/xhtml">

<p>A request resource describes a request that an action be performed. A request is 
expected to lead to one or more <a href="response.htm">responses</a> that describe 
the outcome of the request.</p>

<p>
Note that there is a variety of proceses associated with making and processing 
requests. Some requests may be handled immediately by IT systems but most require 
real world actions by humnas. Some requests can only be processed when other real 
world actions happen, such as a patient actually presenting themselves in order 
to allow the action to be performed. Often these real world dependencies are only 
implicit in the request details. 
</p>

<h2>Using Requests in a RESTful context</h2>

<p>In a RESTful context, a server functions as a repository of requests. When the 
server accepts the request, it has only stored the request; there is no direct 
response to the request. Some other process detects the existence of the request, 
processes it, and creates one or more responses as the request is processed. 
Usually, these responses are posted back to the same server as the request, so that
the client can monitor the result of the request.</p>

<p>A client can determine that a request has not been performed by searching for a requests
with no matching responses (see below)</p>

<h2>Using Requests with messaging</h2>

<p>Two message types are defined for sending requests: synchronous and asynchronous.</p>

<p>
In a synchronous message, a request message (i.e. a <a href="atom.htm">bundle</a> with a
<a href="message.htm">message</a> resource and a request resource) is sent to a system, and 
it responds with a message that includes the <a href="response.htm">response</a>. This 
message is simple, but only useful where there only needs to be one response, and where 
the response can be made in a timely fashion.
</p>

<p>
For more general use, an asynchronous message type is also defined. With this type, 
the requesting system sends the request message, and receives a simple message that 
acknowledges that the request was received. Then the receiving system sends one or 
more response messages as the request is processed. Each of these response messages
is sent back to the originating system, which also acknowledges receipt of these messages.
</p>

</div>
