<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
    <title>Message - FHIR v0.01</title>
    <link rel="Stylesheet" type="text/css" media="screen" href="fhir.css"/>
</head>

<body style="margin: 20px">

<h1>Message</h1>
<p>
A message that contains FHIR resources.
</p>
<p>
The relative url is /messages
</p>
<h2>
Content
</h2>
<p><img alt="UML Image" src="message.png"/></p>

<pre>
&lt;<a title="A message that contains FHIR resources" class="dict" href="#Message"><b>Message</b></a> xmlns=&quot;http://www.hl7.org/fhir&quot;&gt;
  &lt;<a title="Unique Id for this message" class="dict" href="#Message.id"><b>id</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="datatypes.htm#id">id</a></font> <font color="navy">Master Resource Id = Message Id</font>&lt;/id&gt;
  &lt;<a title="Id of the thread - a series of messages that pertain to the same logical sequence, and are all identified by the same thread identifier" class="dict" href="#Message.threadId"><b>threadId</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <font color="darkgreen"><a href="datatypes.htm#id">id</a></font> <font color="navy">Id of thread of conversation</font>&lt;/threadId&gt;
  &lt;<a title="Instant the message was sent" class="dict" href="#Message.instant"><b>instant</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="instant.htm#instant">instant</a></font> <font color="navy">Instant the message was sent</font>&lt;/instant&gt;
  &lt;<a title="Code that identifies the event this message represents, and connects it with the event definition in the FHIR specification" class="dict" href="#Message.event"><b>event</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="datatypes.htm#code">code</a></font> <font color="navy">Code for the event his message represents</font>&lt;/event&gt;
  &lt;<a title="Information about the the message that this message is a response to - if it is a response" class="dict" href="#Message.response"><b>response</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a>  <font color="Gray">&lt;!-- If this is a response --&gt;</font>
   &lt;<a title="The id of the message that this a response to" class="dict" href="#Message.response.id"><b>id</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="datatypes.htm#id">id</a></font> <font color="navy">Id of original message</font>&lt;/id&gt;
   &lt;<a title="Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not" class="dict" href="#Message.response.code"><b>code</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="datatypes.htm#code">code</a></font> <font color="navy">Type of response to the message</font>&lt;/code&gt;
   &lt;<a title="True if this is not the first response, because the request message has been received more than once" class="dict" href="#Message.response.duplicate"><b>duplicate</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="datatypes.htm#boolean">boolean</a></font> <font color="navy">if this is not the first response</font>&lt;/duplicate&gt;
  &lt;/response&gt;
  &lt;<a title="The source application from which this message originated" class="dict" href="#Message.source"><b>source</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen">(<a href="Device.htm#Device">Device</a>)</font> <font color="navy">Message Source Application</font>&lt;/source&gt;
  &lt;<a title="The destination application which the message is intended for" class="dict" href="#Message.destination"><b>destination</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen">(<a href="Device.htm#Device">Device</a>)</font> <font color="navy">Message Destination Application</font>&lt;/destination&gt;
  &lt;<a title="The person or device that performd the data entry leading to this message. Where there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions" class="dict" href="#Message.enterer"><b>enterer</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <font color="darkgreen">(<a href="Person.htm#Person">Person</a>|<a href="Device.htm#Device">Device</a>)</font> <font color="navy">The source of the data entry</font>&lt;/enterer&gt;
  &lt;<a title="The logical author of the message - the person or device that decided it should happen. Where there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions" class="dict" href="#Message.author"><b>author</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <font color="darkgreen">(<a href="Person.htm#Person">Person</a>|<a href="Device.htm#Device">Device</a>)</font> <font color="navy">The source of the decision</font>&lt;/author&gt;
  &lt;<a title="The person or organization that accepts overall responsbility for the contents of the message. The implication is that the message event happened under the policies of the responsible party" class="dict" href="#Message.responsible"><b>responsible</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <font color="darkgreen">(<a href="Person.htm#Person">Person</a>|<a href="Organization.htm#Organization">Organization</a>)</font> <font color="navy">final responsibility for event</font>&lt;/responsible&gt;
  &lt;<a title="The effective time - the real world time of the even that the message represents. Usually this is just a starting time, but some message events also have an end time (do x for period y)" class="dict" href="#Message.effective"><b>effective</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <font color="darkgreen"><a href="datatypes.htm#Interval">Interval</a>(<a href="dateTime.htm#dateTime">dateTime</a>)</font> <font color="navy">time of effect</font>&lt;/effective&gt;
  &lt;<a title="The cause of the event - a reason for why this message is being sent" class="dict" href="#Message.reason"><b>reason</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <font color="darkgreen"><a href="datatypes.htm#CodeableConcept">CodeableConcept</a></font> <font color="navy">Cause of event</font>&lt;/reason&gt;
  &lt;<a title="The actual data of the message - a reference to the focus class of the message. " class="dict" href="#Message.data"><b>data</b></a>&gt; <a class="cf" href="xml.htm#Control">cond</a> <font color="darkgreen">(<a href="Any.htm#Any">Any</a>)</font> <font color="navy">The actual content of the message</font>&lt;/data&gt;
  &lt;<a title="See Extensions" class="dict" href="#Message.extensions"><b>extensions</b></a>&gt; <a class="cf" href="xml.htm#Control">opt</a> <a href="extensibility.htm"><font color="navy">See Extensions</font></a>   <a href="extensibility.htm"><font color="navy">See Extensions</font></a> &lt;/extensions&gt;
  &lt;<a title=" " class="dict" href="#Message.text"><b>text</b></a>&gt; <a class="cf" href="xml.htm#Control">mand</a> <font color="darkgreen"><a href="Narrative.htm#Narrative">Narrative</a></font> <font color="navy">Text summary of message, for human interpretation</font>&lt;/text&gt;
&lt;/Message&gt;
</pre>


<p><a href="message.xsd">Schema for Message</a> and <a href="message.xml">an example</a> (or <a href="message.xml.htm">formatted for browser</a>)</p>

<p>
Terminology Bindings
</p>
<ul>
<li>Message.event is  bound to the concept domain <i>MessageEvent</i> which has the allowed values defined for <a href="messaging.htm#Events"> Event List in the messaging framework</a></li>
  <li>Message.response.code is  bound to the concept domain <i>ResponseCode</i>: &quot;The kind of response to a message&quot;. Possible values:
    <table class="codes">
    <tr><td>ok</td><td colspan="2">The message was accepted and processed without error</td></tr>    <tr><td>error</td><td colspan="2">Some internal unexpected error occured - wait and try again. Note - this is usually used for things like database unavailable, which may be expected to resolve, though human intervention may be required</td></tr>    <tr><td>rejection</td><td colspan="2">The message was rejected because of some content in it. There is no point in re-sending without change. The response narrative must describe what the issue is</td></tr>    <tr><td>rules</td><td colspan="2">The message was rejected because of some event-specific business rules, and it may be possible to modify the request and re-submit (as a different request). The response data must clarify what the change would be, as described by the event definition</td></tr>    <tr><td>undeliverable</td><td colspan="2">A middleware agent was unable to deliver the message to it's supposed destination</td></tr>    </table>
  </li>
  <li>Message.reason is  bound to the concept domain <i>EventReason</i>: &quot;The reason for an event occurring&quot;</li>
</ul>



<p>
Notes:
</p>
<ul>
<li>The Message resource is a special case; it is only defined for the messaging framework, and is not encountered in other contexts</li>
<li>The Message resource is always found in an aggregation. The resource references source, destination, enterer, author, and responsible may 
  all be included in the aggregation or left out on the basis that the recipient (and any intermediaries) are able to locate/resolve the resources
  independently. The former would be suitable for loosely coupled systems, and the latter for tightly coupled systems. The messaging conformance 
  statement for an application must describe what aggregation occurs or is required here</li>
<li>The actual content of the data is specified per message event. The data resource is always aggregated</li>
</ul>  


<h2>Formal Definitions</h2>

<p>The formal definitions for the elements above. Also available as <a href="message.dict.xml">an XML file</a></p>

<table class="dict">
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message"> </a><b>Message</b></td></tr>
  <tr><td>Definition</td><td>A message that contains FHIR resources</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Requirements</td><td>Many implementations are not prepared to use REST, and need a message based infrastructure</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.id"> </a><b>Message.id</b></td></tr>
  <tr><td>Definition</td><td>Unique Id for this message</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>id</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td>Requirements</td><td>Each message needs a unique identifier so other messages and underlying infrastructure can reference it</td></tr>
  <tr><td>Comments</td><td>must be unique within a channel, but should be globally unique. UUIDs are recommended</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.threadId"> </a><b>Message.threadId</b></td></tr>
  <tr><td>Definition</td><td>Id of the thread - a series of messages that pertain to the same logical sequence, and are all identified by the same thread identifier</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Type</td><td>id</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.instant"> </a><b>Message.instant</b></td></tr>
  <tr><td>Definition</td><td>Instant the message was sent</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>instant</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.event"> </a><b>Message.event</b></td></tr>
  <tr><td>Definition</td><td>Code that identifies the event this message represents, and connects it with the event definition in the FHIR specification</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>code from MessageEvent</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.response"> </a><b>Message.response</b></td></tr>
  <tr><td>Definition</td><td>Information about the the message that this message is a response to - if it is a response</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.response.id"> </a><b>Message.response.id</b></td></tr>
  <tr><td>Definition</td><td>The id of the message that this a response to</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>id</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td>Comments</td><td>this message must have the same threadId as the original message (including missing if the original message threadId was missing)</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.response.code"> </a><b>Message.response.code</b></td></tr>
  <tr><td>Definition</td><td>Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>code from ResponseCode</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td>Comments</td><td>This is a generic response to the request message. Specific data for the response will be found in Message.data</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.response.duplicate"> </a><b>Message.response.duplicate</b></td></tr>
  <tr><td>Definition</td><td>True if this is not the first response, because the request message has been received more than once</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>boolean</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td>Comments</td><td>The request shouldn't be received more than once if reliable message delivery applies, but mostly it doesn't</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.source"> </a><b>Message.source</b></td></tr>
  <tr><td>Definition</td><td>The source application from which this message originated</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>Resource(Device)</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.destination"> </a><b>Message.destination</b></td></tr>
  <tr><td>Definition</td><td>The destination application which the message is intended for</td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>Resource(Device)</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.enterer"> </a><b>Message.enterer</b></td></tr>
  <tr><td>Definition</td><td>The person or device that performd the data entry leading to this message. Where there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Type</td><td>Resource(Person|Device)</td></tr>
  <tr><td>Requirements</td><td>Need to know for audit/traceback requirements</td></tr>
  <tr><td>Comments</td><td>Usually only for the request, but can be used in a response</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.author"> </a><b>Message.author</b></td></tr>
  <tr><td>Definition</td><td>The logical author of the message - the person or device that decided it should happen. Where there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Type</td><td>Resource(Person|Device)</td></tr>
  <tr><td>Requirements</td><td>Need to know for audit/traceback requirements</td></tr>
  <tr><td>Comments</td><td>Usually only for the request, but can be used in a response</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.responsible"> </a><b>Message.responsible</b></td></tr>
  <tr><td>Definition</td><td>The person or organization that accepts overall responsbility for the contents of the message. The implication is that the message event happened under the policies of the responsible party</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Type</td><td>Resource(Person|Organization)</td></tr>
  <tr><td>Requirements</td><td>Need to know for audit/traceback requirements</td></tr>
  <tr><td>Comments</td><td>Usually only for the request, but can be used in a response</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.effective"> </a><b>Message.effective</b></td></tr>
  <tr><td>Definition</td><td>The effective time - the real world time of the even that the message represents. Usually this is just a starting time, but some message events also have an end time (do x for period y)</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Type</td><td>Interval(dateTime)</td></tr>
  <tr><td>Requirements</td><td>Need to know for understanding the content of the message</td></tr>
  <tr><td>Comments</td><td>Usually only for the request, but can be used in a response</td></tr>
  <tr><td>To Do</td><td>Grahame thinks this is not 80/20. Also, that it reall should be domain modeled, not tucked away here</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.reason"> </a><b>Message.reason</b></td></tr>
  <tr><td>Definition</td><td>The cause of the event - a reason for why this message is being sent</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td>Type</td><td>CodeableConcept from EventReason</td></tr>
  <tr><td>Requirements</td><td>Need to be able to track why resources are being changed and report in the audit log / history of the resource</td></tr>
  <tr><td>RIM Mapping</td><td>ControlAct.reasonCode</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.data"> </a><b>Message.data</b></td></tr>
  <tr><td>Definition</td><td>The actual data of the message - a reference to the focus class of the message. </td></tr>
  <tr><td>Control</td><td>Conditional, 0..1: Mandatory unless the message is a response, in which case the element is optional</td></tr>
  <tr><td>Type</td><td>Resource(Any)</td></tr>
  <tr><td>Must Understand</td><td>true</td></tr>
  <tr><td>Requirements</td><td>Every message event is about actual data, a single resource, that is identified in the definition of the event, and perhaps some or all linked resources</td></tr>
  <tr><td>Comments</td><td>The data is defined where the transaction type is defined. The transaction data is always aggregated with the transaction resource</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.extensions"> </a><b>Message.extensions</b></td></tr>
  <tr><td>Definition</td><td>See Extensions</td></tr>
  <tr><td>Control</td><td>Optional, 0..1</td></tr>
  <tr><td colspan="2 class=&quot;structure&quot;"><a name="Message.text"> </a><b>Message.text</b></td></tr>
  <tr><td>Definition</td><td> </td></tr>
  <tr><td>Control</td><td>Mandatory, 1..1</td></tr>
  <tr><td>Type</td><td>Narrative</td></tr>
</table>



<hr/>
<p style="text-align: center">
  <span style="font-weight: bold; color: Maroon"><img src="warning.png"/> This is an old version of FHIR retained for archive purposes. Do not use for anything else</span>
<br/>
Implementers are welcome to experiment with the content defined here, but should note that the contents are subject to change without prior notice.<br/>
  © HL7.org 2011 - 2012. FHIR v0.01 generated on Mon, May 14, 2012 09:48+1000. <br/>
</p>



   
<script src="/includes/GoogleAnalyticsAddFileTracking.js" type="text/javascript"/>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-676355-1']);
  _gaq.push(['_setDomainName', '.hl7.org']);
  _gaq.push(['_trackPageview']);
  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();
</script>
</body>
</html>